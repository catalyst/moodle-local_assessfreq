{"version":3,"file":"course_selector.min.js","sources":["../src/course_selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Frameworks datasource.\n *\n * This module is compatible with core/form-autocomplete.\n *\n * @packagetool_lpmigrate\n * @copyright2016 Frédéric Massart - FMCorz.net\n * @licensehttp://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/notification'], function (Ajax, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var CourseSelector = {};\n\n    /**\n     * Source of data for Ajax element.\n     *\n     * @param {String} selector The selector of the auto complete element.\n     * @param {String} query The query string.\n     * @param {Function} callback A callback function receiving an array of results.\n     * @return {Void}\n    */\n    CourseSelector.transport = function (selector, query, callback) {\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_courses',\n            args: {\n                query: query\n            },\n        }])[0].then((response) => {\n            let courseArray = JSON.parse(response);\n            callback(courseArray);\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get events'));\n        });\n    };\n\n    /**\n     * Process the results for auto complete elements.\n     *\n     * @param {String} selector The selector of the auto complete element.\n     * @param {Array} results An array or results.\n     * @return {Array} New array of results.\n     */\n    CourseSelector.processResults = function (selector, results) {\n        let options = [];\n        results.forEach((element) => {\n            options.push({\n                value: element.id,\n                label: element.fullname\n            });\n        });\n\n        return options;\n    };\n\n    return CourseSelector;\n});\n"],"names":["define","Ajax","Notification","CourseSelector","selector","query","callback","call","methodname","args","then","response","courseArray","JSON","parse","fail","exception","Error","results","options","forEach","element","push","value","id","label","fullname"],"mappings":";;;;;;;;;AAyBAA,0CAAO,CAAC,YAAa,sBAAsB,SAAUC,KAAMC,kBAKnDC,eAAiB,CAUrBA,UAA2B,SAAUC,SAAUC,MAAOC,UAClDL,KAAKM,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,CACFJ,MAAOA,UAEX,GAAGK,MAAMC,eACLC,YAAcC,KAAKC,MAAMH,UAC7BL,SAASM,gBACVG,MAAK,KACJb,aAAac,UAAU,IAAIC,MAAM,6BAWzCd,eAAgC,SAAUC,SAAUc,aAC5CC,QAAU,UACdD,QAAQE,SAASC,UACbF,QAAQG,KAAK,CACTC,MAAOF,QAAQG,GACfC,MAAOJ,QAAQK,cAIhBP,iBAGJhB"}