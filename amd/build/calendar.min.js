/**
 * Javascript for heatmap calendar generation and display.
 *
 * @package    local_assessfreq
 * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_assessfreq/calendar",["core/str","core/notification","core/ajax"],(function(Str,Notification,Ajax){var Calendar={},eventArray=[];const stringArr=[{key:"sun",component:"calendar"},{key:"mon",component:"calendar"},{key:"tue",component:"calendar"},{key:"wed",component:"calendar"},{key:"thu",component:"calendar"},{key:"fri",component:"calendar"},{key:"sat",component:"calendar"},{key:"jan",component:"local_assessfreq"},{key:"feb",component:"local_assessfreq"},{key:"mar",component:"local_assessfreq"},{key:"apr",component:"local_assessfreq"},{key:"may",component:"local_assessfreq"},{key:"jun",component:"local_assessfreq"},{key:"jul",component:"local_assessfreq"},{key:"aug",component:"local_assessfreq"},{key:"sep",component:"local_assessfreq"},{key:"oct",component:"local_assessfreq"},{key:"nov",component:"local_assessfreq"},{key:"dec",component:"local_assessfreq"}];var stringResult,heatRangeMax,heatRangeMin,colorArray,processModules,heatRangeScale={1:0,2:0,3:0,4:0,5:0,6:0};const getContrast=function(hexcolor){return void 0===hexcolor?"#000000":("#"===hexcolor.slice(0,1)&&(hexcolor=hexcolor.slice(1)),(299*parseInt(hexcolor.substr(0,2),16)+587*parseInt(hexcolor.substr(2,2),16)+114*parseInt(hexcolor.substr(4,2),16))/1e3>=128?"#000000":"#FFFFFF")},daysInMonth=function(month,year){return 32-new Date(year,month,32).getDate()},getHeatColors=function(){return new Promise(((resolve,reject)=>{Ajax.call([{methodname:"local_assessfreq_get_heat_colors",args:{}}],!0,!1)[0].done((function(response){colorArray=JSON.parse(response),resolve(colorArray)})).fail((function(){reject(new Error("Failed to get heat colors"))}))}))},getProcessModules=function(){return new Promise(((resolve,reject)=>{Ajax.call([{methodname:"local_assessfreq_get_process_modules",args:{}}],!0,!1)[0].done((function(response){processModules=JSON.parse(response),resolve(processModules)})).fail((function(){reject(new Error("Failed to get process events"))}))}))},getHeat=function(eventCount){if(eventCount==heatRangeMin)return 1;const localPercent=(eventCount-heatRangeMin)/(heatRangeMax-heatRangeMin);let heat=Math.round(5*localPercent+1);return heat<1&&(heat=1),heat>6&&(heat=6),heat},getEvents=function(_ref){let{year:year,metric:metric,modules:modules}=_ref;return new Promise(((resolve,reject)=>{let args={year:year,metric:metric,modules:modules},jsonArgs=JSON.stringify(args);Ajax.call([{methodname:"local_assessfreq_get_frequency",args:{jsondata:jsonArgs}}])[0].done((response=>{eventArray=JSON.parse(response),resolve(eventArray)})).fail((()=>{reject(new Error("Failed to get events"))}))}))},createTables=function(_ref2){let{year:year,startMonth:startMonth,endMonth:endMonth}=_ref2;return new Promise(((resolve,reject)=>{let calendarContainer=document.createElement("div"),month=startMonth;for(let i=startMonth;i<=endMonth;i++){let container=document.createElement("div");container.classList.add("local-assessfreq-month");let table=document.createElement("table");table.classList.add("table-striped");let thead=document.createElement("thead"),tbody=document.createElement("tbody");tbody.id="calendar-body-"+i;let monthRow=document.createElement("tr"),dayrow=document.createElement("tr"),monthHeader=document.createElement("th");monthHeader.colSpan=7,monthHeader.innerHTML=stringResult[7+month];for(let j=0;j<7;j++){let dayHeader=document.createElement("th");dayHeader.innerHTML=stringResult[j],dayrow.appendChild(dayHeader)}monthRow.appendChild(monthHeader),thead.appendChild(monthRow),thead.appendChild(dayrow),table.appendChild(thead),table.appendChild(tbody),container.appendChild(table),calendarContainer.appendChild(container),month++}if(void 0===year||void 0===startMonth||void 0===endMonth)reject(Error("Failed to create calendar tables."));else{resolve({calendarContainer:calendarContainer,year:year,startMonth:startMonth})}}))},getTooltip=function(dayArray){let tipHTML="";for(let[key,value]of Object.entries(dayArray))tipHTML+="<strong>"+processModules[key]+":</strong> "+value+"<br/>";return tipHTML},populateCalendarDays=function(table,year,month){let firstDay=new Date(year,month).getDay(),monthEvents=function(year,month){let monthevents;return void 0!==eventArray[year]&&void 0!==eventArray[year][month]&&(monthevents=eventArray[year][month]),monthevents}(year,month+1),date=1;for(let i=0;i<6;i++){let row=document.createElement("tr");for(let j=0;j<7;j++){if(0===i&&j<firstDay){var cell=document.createElement("td"),cellText=document.createTextNode("");cell.dataset.event="false"}else{if(date>daysInMonth(month,year))break;if(cell=document.createElement("td"),cellText=document.createTextNode(date),void 0!==monthEvents&&monthEvents.hasOwnProperty(date)){let heat=getHeat(monthEvents[date].number);(0==heatRangeScale[heat]||heatRangeScale[heat]>monthEvents[date].number)&&(heatRangeScale[heat]=monthEvents[date].number),cell.style.backgroundColor=colorArray[heat],cell.style.color=getContrast(colorArray[heat]),cell.dataset.toggle="tooltip",cell.dataset.html="true",cell.dataset.event="true",cell.dataset.date=year+"-"+(month+1)+"-"+date,cell.title=getTooltip(monthEvents[date]),cell.style.cursor="pointer"}date++}cell.appendChild(cellText),row.appendChild(cell)}table.appendChild(row)}},populateCalendar=function(_ref3){let{calendarContainer:calendarContainer,year:year,startMonth:startMonth}=_ref3;return new Promise(((resolve,reject)=>{let tables=calendarContainer.getElementsByTagName("tbody"),month=startMonth;for(var i=0;i<tables.length;i++){let table=tables[i];populateCalendarDays(table,year,month),month++}void 0===calendarContainer?reject(Error("Failed to populate calendar tables.")):resolve(calendarContainer)}))};return Calendar.createHeatScale=function(){return new Promise((resolve=>{let table=document.createElement("table"),tbody=document.createElement("tbody"),trow=document.createElement("tr");for(var i=1;i<7;i++)if(0!==heatRangeScale[i]){let cell=document.createElement("td"),cellText=document.createTextNode(heatRangeScale[i]+"+");cell.appendChild(cellText),cell.style.backgroundColor=colorArray[i],cell.style.color=getContrast(colorArray[i]),trow.appendChild(cell)}tbody.appendChild(trow),table.appendChild(tbody),heatRangeScale={1:0,2:0,3:0,4:0,5:0,6:0},resolve(table)}))},Calendar.generate=function(year,startMonth,endMonth,metric,modules){return new Promise(((resolve,reject)=>{const dateObj={year:year,startMonth:startMonth,endMonth:endMonth},eventObj={year:year,metric:metric,modules:modules};Str.get_strings(stringArr).catch((()=>{Notification.exception(new Error("Failed to load strings"))})).then((stringReturn=>(stringResult=stringReturn,eventObj))).then(getEvents).then((eventArray=>{!function(eventArray,dateObj){new Promise((resolve=>{if(void 0===eventArray&&(heatRangeMax=0,heatRangeMin=0,resolve(eventArray)),Object.keys(eventArray).length>0&&"undefined"!==eventArray[dateObj.year]){let eventcount=new Array,year=eventArray[dateObj.year];for(let i=0;i<12;i++)if(void 0!==year[i]){let month=year[i];for(let j=0;j<32;j++)void 0!==month[j]&&eventcount.push(month[j].number)}heatRangeMax=Math.max(...eventcount),heatRangeMin=Math.min(...eventcount)}else heatRangeMax=0,heatRangeMin=0;resolve(eventArray)}))}(eventArray,dateObj)})).then(getHeatColors).then(getProcessModules).then((()=>dateObj)).then(createTables).then(populateCalendar).then((calendarHTML=>{void 0!==calendarHTML?resolve(calendarHTML):reject(Error("Could not generate calendar"))}))}))},Calendar}));

//# sourceMappingURL=calendar.min.js.map