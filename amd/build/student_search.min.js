define("local_assessfreq/student_search",["exports","jquery","core/notification","local_assessfreq/override_modal","local_assessfreq/table_handler","local_assessfreq/user_preferences"],(function(_exports,_jquery,_notification,_override_modal,TableHandler,UserPreference){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript for student search display and processing.
   *
   * @module     local_assessfreq/student_search
   * @package    local_assessfreq
   * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */var contextid;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_notification=_interopRequireDefault(_notification),_override_modal=_interopRequireDefault(_override_modal),TableHandler=_interopRequireWildcard(TableHandler),UserPreference=_interopRequireWildcard(UserPreference);var counterid,hoursAhead=4,hoursBehind=1,refreshPeriod=60;const refreshCounter=function(){let reset=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],progressElement=document.getElementById("local-assessfreq-period-progress");!0===reset&&(clearInterval(counterid),counterid=null,progressElement.setAttribute("style","width: 100%"),progressElement.setAttribute("aria-valuenow",100)),counterid||(counterid=setInterval((()=>{let progressWidthAria=progressElement.getAttribute("aria-valuenow");const progressStep=100/refreshPeriod;progressWidthAria-progressStep>0?(progressElement.setAttribute("style","width: "+(progressWidthAria-progressStep)+"%"),progressElement.setAttribute("aria-valuenow",progressWidthAria-progressStep)):(clearInterval(counterid),counterid=null,progressElement.setAttribute("style","width: 100%"),progressElement.setAttribute("aria-valuenow",100),TableHandler.getTable(0,[hoursAhead,hoursBehind],null),refreshCounter())}),1e3))},tableSearchAheadSet=event=>{if(event.preventDefault(),"a"===event.target.tagName.toLowerCase()){let hours=event.target.dataset.metric;UserPreference.setUserPreference("local_assessfreq_student_search_table_hoursahead_preference",hours).then((()=>{hoursAhead=hours,TableHandler.getTable(0,[hoursAhead,hoursBehind],null)})).fail((()=>{_notification.default.exception(new Error("Failed to update user preference: hours ahead"))}))}},tableSearchBehindSet=event=>{if(event.preventDefault(),"a"===event.target.tagName.toLowerCase()){let hours=event.target.dataset.metric;UserPreference.setUserPreference("local_assessfreq_student_search_table_hoursbehind_preference",hours).then((()=>{hoursBehind=hours,TableHandler.getTable(0,[hoursAhead,hoursBehind],null)})).fail((()=>{_notification.default.exception(new Error("Failed to update user preference: hours behind"))}))}},refreshAction=event=>{event.preventDefault();var element=event.target;null!==element.closest("button")&&"local-assessfreq-refresh-quiz-dashboard"===element.closest("button").id?(refreshCounter(!0),TableHandler.getTable(0,[hoursAhead,hoursBehind],null)):"a"===element.tagName.toLowerCase()&&(refreshPeriod=element.dataset.period,refreshCounter(!0),UserPreference.setUserPreference("local_assessfreq_quiz_refresh_preference",refreshPeriod))};_exports.init=context=>{contextid=context,TableHandler.init(0,contextid,"local-assessfreq-student-search-table","local-assessfreq-student-search","get_student_search_table","local_assessfreq_student_search_table_rows_preference","local-assessfreq-quiz-student-table-search","local_assessfreq_student_search_table","local_assessfreq_set_table_preference");let tableSearchInputElement=document.getElementById("local-assessfreq-quiz-student-table-search"),tableSearchResetElement=document.getElementById("local-assessfreq-quiz-student-table-search-reset"),tableSearchRowsElement=document.getElementById("local-assessfreq-quiz-student-table-rows"),tableSearchAheadElement=document.getElementById("local-assessfreq-quiz-student-table-hoursahead"),tableSearchBehindElement=document.getElementById("local-assessfreq-quiz-student-table-hoursbehind"),refreshElement=document.getElementById("local-assessfreq-period-container");tableSearchInputElement.addEventListener("keyup",TableHandler.tableSearch),tableSearchInputElement.addEventListener("paste",TableHandler.tableSearch),tableSearchResetElement.addEventListener("click",TableHandler.tableSearchReset),tableSearchRowsElement.addEventListener("click",TableHandler.tableSearchRowSet),tableSearchAheadElement.addEventListener("click",tableSearchAheadSet),tableSearchBehindElement.addEventListener("click",tableSearchBehindSet),refreshElement.addEventListener("click",refreshAction),_jquery.default.when(UserPreference.getUserPreference("local_assessfreq_student_search_table_hoursahead_preference").then((response=>{hoursAhead=response.preferences[0].value?response.preferences[0].value:4})).fail((()=>{_notification.default.exception(new Error("Failed to get use preference: hoursahead"))})),UserPreference.getUserPreference("local_assessfreq_student_search_table_hoursbehind_preference").then((response=>{hoursBehind=response.preferences[0].value?response.preferences[0].value:1})).fail((()=>{_notification.default.exception(new Error("Failed to get use preference: hoursahead"))}))).done((function(){TableHandler.getTable(0,[hoursAhead,hoursBehind],null),_override_modal.default.init(context,TableHandler.getTable,[hoursAhead,hoursBehind])}))}}));

//# sourceMappingURL=student_search.min.js.map