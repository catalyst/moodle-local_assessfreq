{"version":3,"file":"table_handler.min.js","sources":["../src/table_handler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Table handler JS module.\n *\n * @module     local_assessfreq/table_handler\n * @package    local_assessfreq\n * @copyright  2020 Guillermo Gomez <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Fragment from 'core/fragment';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport * as Debouncer from 'local_assessfreq/debouncer';\nimport OverrideModal from 'local_assessfreq/override_modal';\nimport * as UserPreference from 'local_assessfreq/user_preferences';\n\n/**\n * Module level variables.\n */\nlet cardElement;\nlet contextId;\nlet elementId;\nlet fragmentValue;\nlet hoursFilter;\nlet quizId = 0;\nlet overridden = false;\nlet rowPreference;\nlet sortValue;\nlet searchElement;\n\n/**\n * Table id variable.\n *\n * @type {string}\n */\nlet id;\n\n/**\n * Table method name variable.\n *\n * @type {string}\n */\nlet methodName;\n\n/**\n * Display the table that contains all the students in the exam as well as their attempts.\n *\n * @param {int} quiz The Quiz Id.\n * @param {array|null} hours Array with hour ahead or behind preference.\n * @param {string|null} sortValueTable Sort preference.\n * @param {int|string|null} page Page number.\n */\nexport const getTable = (quiz, hours = null, sortValueTable = null, page) => {\n    if (typeof page === \"undefined\" || overridden === true) {\n        page = 0;\n    }\n\n    overridden = false;\n\n    let search = document.getElementById(searchElement).value.trim();\n    let tableElement = document.getElementById(elementId);\n    let spinner = tableElement.getElementsByClassName('overlay-icon-container')[0];\n    let tableBody = tableElement.getElementsByClassName('table-body')[0];\n    let values = {'search': search, 'page': page};\n\n    // Add values to Object depending on dashboard type.\n    if (quiz > 0) {\n        quizId = quiz;\n        values.quiz = quizId;\n    }\n    if (hours) {\n        hoursFilter = hours;\n        values.hoursahead = hoursFilter[0];\n        values.hoursbehind = hoursFilter[1];\n    }\n    if (sortValueTable) {\n        sortValue = sortValueTable;\n        let sortArray = sortValue.split('_');\n        let sortOn = sortArray[0];\n        let direction = sortArray[1];\n        values.sorton = sortOn;\n        values.direction = direction;\n    }\n\n    let params = {'data': JSON.stringify(values)};\n\n    spinner.classList.remove('hide'); // Show spinner if not already shown.\n    Fragment.loadFragment('local_assessfreq', fragmentValue, contextId, params)\n        .done((response, js) => {\n            tableBody.innerHTML = response;\n            if (js) {\n                Templates.runTemplateJS(js); // Magic call the initialises JS from template included in response template HTML.\n            }\n            spinner.classList.add('hide');\n            tableEventListeners(); // Re-add table event listeners.\n\n        }).fail(() => {\n            Notification.exception(new Error('Failed to update table.'));\n        });\n};\n\n/**\n * This stops the ajax method that updates the table from being updated\n * while the user is still checking options.\n *\n */\nconst debounceTable = Debouncer.debouncer(() => {\n    getTable(quizId, hoursFilter, sortValue);\n}, 750);\n\n/**\n * Process the sort click events from the student table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst tableSort = (event) => {\n    event.preventDefault();\n\n    let sortArray = {};\n    const linkUrl = new URL(event.target.closest('a').href);\n    const targetSortBy = linkUrl.searchParams.get('tsort');\n    let targetSortOrder = linkUrl.searchParams.get('tdir');\n\n    // We want to flip the clicked column.\n    if (targetSortOrder === '') {\n        targetSortOrder = \"4\";\n    }\n\n    sortArray[targetSortBy] = targetSortOrder;\n\n    // Set option via ajax.\n    Ajax.call([{\n        methodname: methodName,\n        args: {\n            tableid: id,\n            preference: 'sortby',\n            values: JSON.stringify(sortArray)\n        },\n    }])[0].then(() => {\n        getTable(quizId, hoursFilter, sortValue); // Reload the table.\n    });\n\n};\n\n/**\n * Process the sort click events from the student table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst tableHide = (event) => {\n    event.preventDefault();\n\n    let hideArray = {};\n    const linkUrl = new URL(event.target.closest('a').href);\n    const tableElement = document.getElementById(elementId);\n    const links = tableElement.querySelectorAll('a');\n    let targetAction;\n    let targetColumn;\n    let action;\n    let column;\n\n    if (linkUrl.search.indexOf('thide') !== -1) {\n        targetAction = 'hide';\n        targetColumn = linkUrl.searchParams.get('thide');\n    } else {\n        targetAction = 'show';\n        targetColumn = linkUrl.searchParams.get('tshow');\n    }\n\n    for (let i = 0; i < links.length; i++) {\n        let hideLinkUrl = new URL(links[i].href);\n        if (hideLinkUrl.search.indexOf('thide') !== -1) {\n            action = 'hide';\n            column = hideLinkUrl.searchParams.get('thide');\n        } else {\n            action = 'show';\n            column = hideLinkUrl.searchParams.get('tshow');\n        }\n\n        if (action === 'show') {\n            hideArray[column] = 1;\n        }\n    }\n\n    hideArray[targetColumn] = (targetAction === 'hide') ? 1 : 0; // We want to flip the clicked column.\n\n    // Set option via ajax.\n    Ajax.call([{\n        methodname: methodName,\n        args: {\n            tableid: id,\n            preference: 'collapse',\n            values: JSON.stringify(hideArray)\n        },\n    }])[0].then(() => {\n        getTable(quizId, hoursFilter, sortValue); // Reload the table.\n    });\n\n};\n\n/**\n * Process the reset click event from the table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst tableReset = (event) => {\n    event.preventDefault();\n\n    // Set option via ajax.\n    Ajax.call([{\n        methodname: methodName,\n        args: {\n            tableid: id,\n            preference: 'reset',\n            values: JSON.stringify({})\n        },\n    }])[0].then(() => {\n        getTable(quizId, hoursFilter, sortValue); // Reload the table.\n    });\n\n};\n\n/**\n * Process the search events from the student table.\n *\n */\nexport const tableSearch = (event) => {\n    if (event.key === 'Meta' || event.ctrlKey) {\n        return false;\n    }\n\n    if (event.target.value.length === 0 || event.target.value.length > 2) {\n        debounceTable();\n    }\n};\n\n/**\n * Process the search reset click event from the student table.\n *\n */\nexport const tableSearchReset = () => {\n    let tableSearchInputElement = document.getElementById(searchElement);\n    tableSearchInputElement.value = '';\n    tableSearchInputElement.focus();\n    getTable(quizId, hoursFilter, sortValue);\n};\n\n/**\n * Process the row set event from the student table.\n *\n * @param {Event} event The triggered event for the element.\n */\nexport const tableSearchRowSet = (event) => {\n    event.preventDefault();\n    if (event.target.tagName.toLowerCase() === 'a') {\n        let rows = event.target.dataset.metric;\n        UserPreference.setUserPreference(rowPreference, rows)\n            .then(() => {\n                getTable(quizId, hoursFilter, sortValue); // Reload the table.\n            })\n            .fail(() => {\n                Notification.exception(new Error('Failed to update user preference: rows'));\n            });\n    }\n};\n\n/**\n * Process the nav event from the student table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst tableNav = (event) => {\n    event.preventDefault();\n\n    const linkUrl = new URL(event.target.closest('a').href);\n    const page = linkUrl.searchParams.get('page');\n\n    if (page) {\n        getTable(quizId, hoursFilter, sortValue, page);\n    }\n};\n\n/**\n * Get and process the selected assessment metric from the dropdown for the heatmap display,\n * and update the corresponding user preference.\n *\n * @param {Event} event The triggered event for the element.\n */\nexport const tableSortButtonAction = (event) => {\n    event.preventDefault();\n    var element = event.target;\n\n    if (element.tagName.toLowerCase() === 'a' && element.dataset.sort !== sortValue) {\n        sortValue = element.dataset.sort;\n\n        let links = element.parentNode.getElementsByTagName('a');\n        for (let i = 0; i < links.length; i++) {\n            links[i].classList.remove('active');\n        }\n\n        element.classList.add('active');\n\n        // Save selection as a user preference.\n        UserPreference.setUserPreference('local_assessfreq_quiz_table_inprogress_sort_preference', sortValue);\n\n        debounceTable(); // Call function to update table.\n    }\n};\n\n/**\n * Re-add event listeners when the student table is updated.\n */\nconst tableEventListeners = () => {\n    const tableElement = document.getElementById(elementId);\n    let tableNavElement;\n    if (cardElement) {\n        const tableCardElement = document.getElementById(cardElement);\n        const links = tableElement.querySelectorAll('a');\n        const resetLink = tableElement.getElementsByClassName('resettable');\n        const overrideLinks = tableElement.getElementsByClassName('action-icon override');\n        const disabledLinks = tableElement.getElementsByClassName('action-icon disabled');\n        tableNavElement = tableCardElement.querySelectorAll('nav'); // There are two nav paging elements per table.\n\n        for (let i = 0; i < links.length; i++) {\n            let linkUrl = new URL(links[i].href);\n            if (linkUrl.search.indexOf('thide') !== -1 || linkUrl.search.indexOf('tshow') !== -1) {\n                links[i].addEventListener('click', tableHide);\n            } else if (linkUrl.search.indexOf('tsort') !== -1) {\n                links[i].addEventListener('click', tableSort);\n            }\n        }\n\n        if (resetLink.length > 0) {\n            resetLink[0].addEventListener('click', tableReset);\n        }\n\n        for (let i = 0; i < overrideLinks.length; i++) {\n            overrideLinks[i].addEventListener('click', triggerOverrideModal);\n        }\n\n        for (let i = 0; i < disabledLinks.length; i++) {\n            disabledLinks[i].addEventListener('click', (event) => {\n                event.preventDefault();\n            });\n        }\n    } else {\n        tableNavElement = tableElement.querySelectorAll('nav');\n    }\n\n    tableNavElement.forEach((navElement) => {\n        navElement.addEventListener('click', tableNav);\n    });\n};\n\n/**\n * Trigger the override modal form. Thin wrapper to add extra data to click event.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst triggerOverrideModal = (event) => {\n    event.preventDefault();\n    let userid = event.target.closest('a').id.substring(25);\n    if (userid.includes('-')) {\n        let elements = userid.split('-');\n        quizId = elements.pop();\n        userid = elements.pop();\n    }\n\n    OverrideModal.displayModalForm(quizId, userid, hoursFilter);\n};\n\n/**\n * Initialise method for table handler.\n *\n * @param {int} quiz The quiz id.\n * @param {int} context The context id.\n * @param {string} tableCardElement The table card element.\n * @param {string} tableElementId The table element id.\n * @param {string} tableFragmentValue The table fragment value.\n * @param {string} tableRowPreference The table row preference.\n * @param {string} tableSearchElement The table search element.\n * @param {string|null} tableId The table id.\n * @param {string|null} tableMethodName The table method name.\n */\nexport const init = (quiz,\n                     context,\n                     tableCardElement,\n                     tableElementId,\n                     tableFragmentValue,\n                     tableRowPreference,\n                     tableSearchElement,\n                     tableId = null,\n                     tableMethodName = null) => {\n                            quizId = quiz;\n                            contextId = context;\n                            cardElement = tableCardElement;\n                            elementId = tableElementId;\n                            fragmentValue = tableFragmentValue;\n                            rowPreference = tableRowPreference;\n                            searchElement = tableSearchElement;\n                            id = tableId;\n                            methodName = tableMethodName;\n                        };\n"],"names":["cardElement","contextId","elementId","fragmentValue","hoursFilter","rowPreference","sortValue","searchElement","id","methodName","quizId","overridden","getTable","quiz","hours","sortValueTable","page","search","document","getElementById","value","trim","tableElement","spinner","getElementsByClassName","tableBody","values","hoursahead","hoursbehind","sortArray","split","sortOn","direction","sorton","params","JSON","stringify","classList","remove","loadFragment","done","response","js","innerHTML","runTemplateJS","add","tableEventListeners","fail","exception","Error","debounceTable","Debouncer","debouncer","tableSort","event","preventDefault","linkUrl","URL","target","closest","href","targetSortBy","searchParams","get","targetSortOrder","call","methodname","args","tableid","preference","then","tableHide","hideArray","links","querySelectorAll","targetAction","targetColumn","action","column","indexOf","i","length","hideLinkUrl","tableReset","key","ctrlKey","tableSearchInputElement","focus","tagName","toLowerCase","rows","dataset","metric","UserPreference","setUserPreference","tableNav","element","sort","parentNode","getElementsByTagName","tableNavElement","tableCardElement","resetLink","overrideLinks","disabledLinks","addEventListener","triggerOverrideModal","forEach","navElement","userid","substring","includes","elements","pop","displayModalForm","context","tableElementId","tableFragmentValue","tableRowPreference","tableSearchElement","tableId","tableMethodName"],"mappings":"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"}