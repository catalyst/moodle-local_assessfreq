/**
 * Javascript for heatmap calendar generation and display.
 *
 * @package    local_assessfreq
 * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_assessfreq/dayview",["core/str","core/notification","core/modal_factory","local_assessfreq/modal_large","core/templates","core/ajax"],(function(Str,Notification,ModalFactory,ModalLarge,Templates,Ajax){var modalObj,Dayview={};const spinner='<p class="text-center"><i class="fa fa-circle-o-notch fa-spin fa-3x fa-fw"></i></p>',stringArr=[{key:"sun",component:"calendar"},{key:"mon",component:"calendar"},{key:"tue",component:"calendar"},{key:"wed",component:"calendar"},{key:"thu",component:"calendar"},{key:"fri",component:"calendar"},{key:"sat",component:"calendar"},{key:"jan",component:"local_assessfreq"},{key:"feb",component:"local_assessfreq"},{key:"mar",component:"local_assessfreq"},{key:"apr",component:"local_assessfreq"},{key:"may",component:"local_assessfreq"},{key:"jun",component:"local_assessfreq"},{key:"jul",component:"local_assessfreq"},{key:"aug",component:"local_assessfreq"},{key:"sep",component:"local_assessfreq"},{key:"oct",component:"local_assessfreq"},{key:"nov",component:"local_assessfreq"},{key:"dec",component:"local_assessfreq"}];var stringResult,systemTimezone="Australia/Melbourne",dayViewTitle="";const getUserDate=function(timestamp,format){return new Promise((resolve=>{const systemTimezoneTime=new Date(1e3*timestamp).toLocaleString("en-US",{timeZone:systemTimezone});let date=new Date(systemTimezoneTime);const year=date.getFullYear(),month=stringResult[7+date.getMonth()],day=date.getDate(),strftimetime=date.getHours()+":"+("0"+date.getMinutes()).substr(-2);resolve("strftimetime"===format?strftimetime:day+" "+month+" "+year+", "+strftimetime)}))},formatData=async function(response){let responseArr=JSON.parse(response),scaler=5/72;for(let i=0;i<responseArr.length;i++){const year=responseArr[i].endyear,month=responseArr[i].endmonth-1,day=responseArr[i].endday,dayStart=new Date(year,month,day).getTime()/1e3,timeStart=new Date(1e3*responseArr[i].timestart).toLocaleString("en-US",{timeZone:systemTimezone}),timeStartTimestamp=new Date(timeStart).getTime()/1e3,timeEnd=new Date(1e3*responseArr[i].timeend).toLocaleString("en-US",{timeZone:systemTimezone}),timeEndTimestamp=new Date(timeEnd).getTime()/1e3;let secondsSinceDayStart=timeStartTimestamp-dayStart,leftMargin=0,width=0;secondsSinceDayStart<=0?(secondsSinceDayStart=0,width=(timeEndTimestamp-dayStart)/60*scaler,responseArr[i].start=await getUserDate(responseArr[i].timestart,"strftimedatetime")):(leftMargin=secondsSinceDayStart/60*scaler,width=(timeEndTimestamp-timeStartTimestamp)/60*scaler,responseArr[i].start=await getUserDate(responseArr[i].timestart,"strftimetime")),leftMargin+width>100&&(width=100-leftMargin),responseArr[i].leftmargin=leftMargin,responseArr[i].width=width,responseArr[i].end=await getUserDate(responseArr[i].timeend,"strftimetime")}return new Promise((resolve=>{resolve(responseArr)}))};return Dayview.display=function(date){modalObj.setBody(spinner),modalObj.show();let args={date:date,modules:["all"]},jsonArgs=JSON.stringify(args);Ajax.call([{methodname:"local_assessfreq_get_day_events",args:{jsondata:jsonArgs}}])[0].then(formatData).then((responseArr=>{let context={rows:responseArr};const year=responseArr[0].endyear,dayDate=responseArr[0].endday+" "+stringResult[6+parseInt(responseArr[0].endmonth)]+" "+year;modalObj.setTitle(dayViewTitle+" "+dayDate),modalObj.setBody(Templates.render("local_assessfreq/dayview",context))})).fail((()=>{Notification.exception(new Error("Failed to load day view"))}))},Dayview.init=function(){Str.get_strings(stringArr).then((stringReturn=>{stringResult=stringReturn})),Ajax.call([{methodname:"local_assessfreq_get_system_timezone",args:{}}],!0,!1)[0].then((response=>{systemTimezone=response})).fail((()=>{Notification.exception(new Error("Failed to get system timezone"))})),Str.get_string("schedule","local_assessfreq").then((title=>{dayViewTitle=title,ModalFactory.create({type:ModalLarge.TYPE,title:title,body:spinner}).done((modal=>{modalObj=modal}))}))},Dayview}));

//# sourceMappingURL=dayview.min.js.map