{"version":3,"file":"zoom_modal.min.js","sources":["../src/zoom_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    ['core/str', 'core/modal_factory', 'core/fragment', 'core/ajax', 'core/templates', 'local_assessfreq/modal_large',\n    'core/notification'],\n    function (Str, ModalFactory, Fragment, Ajax, Templates, ModalLarge, Notification) {\n\n        /**\n         * Module level variables.\n         */\n        var ZoomModal = {};\n        var contextid;\n        var modalObj;\n        const spinner = '<p class=\"text-center\">'\n            + '<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>'\n            + '</p>';\n\n        /**\n         * Provides zoom functionality for card graphs.\n         */\n        ZoomModal.zoomGraph = function (event, params, method) {\n            let title = event.target.parentElement.dataset.title;\n\n            Fragment.loadFragment('local_assessfreq', method, contextid, params)\n            .done((response) => {\n                let resObj = JSON.parse(response);\n                if (resObj.hasdata == true) {\n                    var context = { 'withtable' : false, 'chartdata' : JSON.stringify(resObj.chart), aspect: false};\n                    modalObj.setTitle(title);\n                    modalObj.setBody(Templates.render('local_assessfreq/chart', context));\n                    modalObj.show();\n                    return;\n                } else {\n                    Str.get_string('nodata', 'local_assessfreq').then((str) => {\n                        const noDatastr = document.createElement('h3');\n                        noDatastr.innerHTML = str;\n                        modalObj.setTitle(title);\n                        modalObj.setBody(noDatastr.outerHTML);\n                        modalObj.show();\n                        return;\n                    });\n                }\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load zoomed graph'));\n                return;\n            });\n\n        };\n\n        /**\n         * Create the modal window for graph zooming.\n         *\n         * @private\n         */\n        const createModal = function () {\n            return new Promise((resolve, reject) => {\n                Str.get_string('loading', 'core').then((title) => {\n                    // Create the Modal.\n                    ModalFactory.create({\n                        type: ModalLarge.TYPE,\n                        title: title,\n                        body: spinner\n                    })\n                    .done((modal) => {\n                        modalObj = modal;\n                        resolve();\n                    });\n                }).catch(() => {\n                    reject(new Error('Failed to load string: loading'));\n                });\n            });\n        };\n\n        /**\n         * Initialise method for quiz dashboard rendering.\n         */\n        ZoomModal.init = function (context) {\n            contextid = context;\n            createModal();\n        };\n\n        return ZoomModal;\n    }\n);\n"],"names":["define","Str","ModalFactory","Fragment","Ajax","Templates","ModalLarge","Notification","contextid","modalObj","ZoomModal","zoomGraph","event","params","method","title","target","parentElement","dataset","loadFragment","done","response","resObj","JSON","parse","hasdata","context","stringify","chart","aspect","setTitle","setBody","render","show","get_string","then","str","noDatastr","document","createElement","innerHTML","outerHTML","fail","exception","Error","init","Promise","resolve","reject","create","type","TYPE","body","modal","catch"],"mappings":";;;;;;;AAuBAA,qCACI,CAAC,WAAY,qBAAsB,gBAAiB,YAAa,iBAAkB,+BACnF,sBACA,SAAUC,IAAKC,aAAcC,SAAUC,KAAMC,UAAWC,WAAYC,kBAM5DC,UACAC,SAFAC,UAAY,GAUhBA,UAAUC,UAAY,SAAUC,MAAOC,OAAQC,YACvCC,MAAQH,MAAMI,OAAOC,cAAcC,QAAQH,MAE/CZ,SAASgB,aAAa,mBAAoBL,OAAQN,UAAWK,QAC5DO,MAAMC,eACCC,OAASC,KAAKC,MAAMH,aACF,GAAlBC,OAAOG,QAAiB,KACpBC,QAAU,YAAgB,YAAqBH,KAAKI,UAAUL,OAAOM,OAAQC,QAAQ,UACzFpB,SAASqB,SAASf,OAClBN,SAASsB,QAAQ1B,UAAU2B,OAAO,yBAA0BN,eAC5DjB,SAASwB,OAGThC,IAAIiC,WAAW,SAAU,oBAAoBC,MAAMC,YACzCC,UAAYC,SAASC,cAAc,MACzCF,UAAUG,UAAYJ,IACtB3B,SAASqB,SAASf,OAClBN,SAASsB,QAAQM,UAAUI,WAC3BhC,SAASwB,aAIlBS,MAAK,KACJnC,aAAaoC,UAAU,IAAIC,MAAM,2CAiCzClC,UAAUmC,KAAO,SAAUnB,SACvBlB,UAAYkB,QAtBL,IAAIoB,SAAQ,CAACC,QAASC,UACzB/C,IAAIiC,WAAW,UAAW,QAAQC,MAAMpB,QAEpCb,aAAa+C,OAAO,CAChBC,KAAM5C,WAAW6C,KACjBpC,MAAOA,MACPqC,KAhDA,wFAkDHhC,MAAMiC,QACH5C,SAAW4C,MACXN,gBAELO,OAAM,KACLN,OAAO,IAAIJ,MAAM,0CAatBlC"}